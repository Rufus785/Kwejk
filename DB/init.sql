-- USERS TABLE
CREATE TABLE Users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    password_hash VARCHAR2(255) NOT NULL,
    profile_picture_url VARCHAR2(255),
    bio CLOB,
    is_admin NUMBER(1) DEFAULT 0 CHECK (is_admin IN (0, 1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- IMAGES TABLE
CREATE TABLE Images (
    image_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    caption CLOB,
    image_url VARCHAR2(255) NOT NULL,
    is_deleted NUMBER(1) DEFAULT 0 CHECK (is_deleted IN (0, 1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_images_user FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

-- LIKES TABLE
CREATE TABLE Likes (
    like_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    image_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_likes_image FOREIGN KEY (image_id) REFERENCES Images(image_id) ON DELETE CASCADE,
    CONSTRAINT fk_likes_user FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    CONSTRAINT uc_likes UNIQUE (image_id, user_id)
);

-- COMMENTS TABLE
CREATE TABLE Comments (
    comment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    image_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    comment_text CLOB NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_comments_image FOREIGN KEY (image_id) REFERENCES Images(image_id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_user FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

-- REPORTS TABLE
CREATE TABLE Reports (
    report_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    image_id NUMBER NOT NULL,
    reported_by NUMBER NOT NULL,
    resolved_by NUMBER,
    reason CLOB NOT NULL,
    is_resolved NUMBER(1) DEFAULT 0 CHECK (is_resolved IN (0, 1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    resolved_at TIMESTAMP,
    CONSTRAINT fk_reports_image FOREIGN KEY (image_id) REFERENCES Images(image_id) ON DELETE CASCADE,
    CONSTRAINT fk_reports_reported_by FOREIGN KEY (reported_by) REFERENCES Users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_reports_resolved_by FOREIGN KEY (resolved_by) REFERENCES Users(user_id)
);
